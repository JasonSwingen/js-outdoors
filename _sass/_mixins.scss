// MIXINS
// --------------------------------------------------

%tab-focus {
	// Default
	outline: thin dotted #333;
	// Webkit
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}


//  Typography
// --------------------------------------------------

/*  Vertical Rhythm
	https://github.com/sturobson/Sassifaction

	In this mixin you can specify the font size in PX and
	it will calculate the REM based on your $doc-font-size
	& $doc-line-height variables.

		@include font-size(24);

	It will also create a bottom margin based on the
	$doc-font-size & $doc-line-height variables unless you
	specify that it shouldn't have one.

		@include font-size(24, no);

	Or if you want to specify a different bottom margin to
	be generated.

		@include font-size(24,32);

	This mixin also generates a pixel-less line height by
	default unless you specify that you either don't want
	one where I'd suggest declaring 1 within the mixin.

		@include font-size(24, yes, 1);

	There's also the option to specify a different line-height
	for it to generate to, where you would specify the
	line-height in (effectively) it's pixel value.

		@include font-size(24, yes, 40);
*/

@mixin font-size($size, $margin: yes, $line-height: $doc-line-height) {

	// generates the font-size in REMs with a PX fallback
	font-size: 0px + $size;
	font-size: 0rem + $size / $doc-font-size;

	// line-height functions
	////////////////////////

	// if you a line-height is specified in the mixin
	@if $line-height != $doc-line-height and $line-height != 1 {
		line-height: ceil($size / $line-height) * ($line-height / $size);
	}

	// if $line-height == 1
	// because, typing 1 is quicker than 16
	@else if $line-height == 1 {
		line-height: 1;
	}

	// normal $line-height
	// if the line-height is left.
	@else {
		line-height: ceil($size / $doc-line-height) * ($doc-line-height / $size);
	}

	// margin-bottom functions
	//////////////////////////

	// if no is bottom margin is required
	@if $margin == no {
		margin-bottom: 0;
	}

	// if a specific bottom margin is required
	@else if $margin != yes and $margin != no {
		margin-bottom: 0px + $margin;
		margin-bottom: 0rem + ($margin / $doc-font-size);
	}

	// if you're keeping the vertical rhythm with the margin
	@else {
		margin-bottom: 0px + $doc-line-height;
		margin-bottom: 0rem + ($doc-line-height / $doc-font-size);
	}
}

.slideright {
  @include animation(slideright 2s ease-in-out);
  animation-delay: 2s;
}
.slideleft {
  @include animation(slideleft 2s ease-in-out);
  // animation-delay: 1s;
}

@keyframes slideright {
    0%   {
      opacity: 0;
      margin-left: 2000px;
    }
    100% {
      opacity: 1;
      margin-left: 0px;
    }
}
@keyframes slideleft {
    0%   {
			// opacity: 0;
      left: -1000px;
    }
    100% {
			// opacity: 1;
      left: -48px;
    }
}

.fade-in-element {
  $base-border-color: gainsboro !default;
  $base-border-radius: 3px !default;
  $base-background-color: white !default;
  $base-line-height: 1.5em !default;
  $base-spacing: 1.5em !default;
  $dark-gray: #333 !default;
  $base-font-color: $dark-gray !default;

  @include clearfix;
  background: $base-background-color;
  border: 1px solid silver;
  border-radius: $base-border-radius;
  box-shadow: 0 2px 2px transparentize(black, 0.8);
  line-height: $base-line-height;
  margin-bottom: 4em;
  padding: $base-spacing;
  text-align: center;
  width: 100%;

  p {
    color: $base-font-color;
    line-height: $base-line-height;
  }
}

.js-fade-element-hide {
  opacity: 0;
}

.js-fade-element-show {
  opacity: 1;
  transition: all 0.4s ease-in-out;
}
